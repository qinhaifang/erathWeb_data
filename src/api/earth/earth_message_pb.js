// source: earth_message.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.earth.BonusRes', null, global);
goog.exportSymbol('proto.earth.BonusResAllList', null, global);
goog.exportSymbol('proto.earth.BonusResList', null, global);
goog.exportSymbol('proto.earth.DictRegion', null, global);
goog.exportSymbol('proto.earth.DictRegionList', null, global);
goog.exportSymbol('proto.earth.DictRegionReq', null, global);
goog.exportSymbol('proto.earth.GraphicStatisticsRes', null, global);
goog.exportSymbol('proto.earth.GraphicStatisticsResList', null, global);
goog.exportSymbol('proto.earth.StatisticalReq', null, global);
goog.exportSymbol('proto.earth.StatisticsDataRes', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.earth.StatisticalReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.earth.StatisticalReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.earth.StatisticalReq.displayName = 'proto.earth.StatisticalReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.earth.StatisticsDataRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.earth.StatisticsDataRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.earth.StatisticsDataRes.displayName = 'proto.earth.StatisticsDataRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.earth.BonusRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.earth.BonusRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.earth.BonusRes.displayName = 'proto.earth.BonusRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.earth.BonusResList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.earth.BonusResList.repeatedFields_, null);
};
goog.inherits(proto.earth.BonusResList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.earth.BonusResList.displayName = 'proto.earth.BonusResList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.earth.BonusResAllList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.earth.BonusResAllList.repeatedFields_, null);
};
goog.inherits(proto.earth.BonusResAllList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.earth.BonusResAllList.displayName = 'proto.earth.BonusResAllList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.earth.DictRegionReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.earth.DictRegionReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.earth.DictRegionReq.displayName = 'proto.earth.DictRegionReq';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.earth.DictRegion = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.earth.DictRegion, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.earth.DictRegion.displayName = 'proto.earth.DictRegion';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.earth.DictRegionList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.earth.DictRegionList.repeatedFields_, null);
};
goog.inherits(proto.earth.DictRegionList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.earth.DictRegionList.displayName = 'proto.earth.DictRegionList';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.earth.GraphicStatisticsRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.earth.GraphicStatisticsRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.earth.GraphicStatisticsRes.displayName = 'proto.earth.GraphicStatisticsRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.earth.GraphicStatisticsResList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.earth.GraphicStatisticsResList.repeatedFields_, null);
};
goog.inherits(proto.earth.GraphicStatisticsResList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.earth.GraphicStatisticsResList.displayName = 'proto.earth.GraphicStatisticsResList';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.earth.StatisticalReq.prototype.toObject = function(opt_includeInstance) {
  return proto.earth.StatisticalReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.earth.StatisticalReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.earth.StatisticalReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    statisticalCode: jspb.Message.getFieldWithDefault(msg, 1, ""),
    statisticalYear: jspb.Message.getFieldWithDefault(msg, 2, ""),
    statisticalType: jspb.Message.getFieldWithDefault(msg, 3, ""),
    statisticalName: jspb.Message.getFieldWithDefault(msg, 4, ""),
    statisticalOrgan: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.earth.StatisticalReq}
 */
proto.earth.StatisticalReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.earth.StatisticalReq;
  return proto.earth.StatisticalReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.earth.StatisticalReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.earth.StatisticalReq}
 */
proto.earth.StatisticalReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatisticalCode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatisticalYear(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatisticalType(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatisticalName(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatisticalOrgan(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.earth.StatisticalReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.earth.StatisticalReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.earth.StatisticalReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.earth.StatisticalReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatisticalCode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStatisticalYear();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getStatisticalType();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getStatisticalName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getStatisticalOrgan();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string statistical_code = 1;
 * @return {string}
 */
proto.earth.StatisticalReq.prototype.getStatisticalCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.earth.StatisticalReq} returns this
 */
proto.earth.StatisticalReq.prototype.setStatisticalCode = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string statistical_year = 2;
 * @return {string}
 */
proto.earth.StatisticalReq.prototype.getStatisticalYear = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.earth.StatisticalReq} returns this
 */
proto.earth.StatisticalReq.prototype.setStatisticalYear = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string statistical_type = 3;
 * @return {string}
 */
proto.earth.StatisticalReq.prototype.getStatisticalType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.earth.StatisticalReq} returns this
 */
proto.earth.StatisticalReq.prototype.setStatisticalType = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string statistical_name = 4;
 * @return {string}
 */
proto.earth.StatisticalReq.prototype.getStatisticalName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.earth.StatisticalReq} returns this
 */
proto.earth.StatisticalReq.prototype.setStatisticalName = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string statistical_organ = 5;
 * @return {string}
 */
proto.earth.StatisticalReq.prototype.getStatisticalOrgan = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.earth.StatisticalReq} returns this
 */
proto.earth.StatisticalReq.prototype.setStatisticalOrgan = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.earth.StatisticsDataRes.prototype.toObject = function(opt_includeInstance) {
  return proto.earth.StatisticsDataRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.earth.StatisticsDataRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.earth.StatisticsDataRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    rebateType: jspb.Message.getFieldWithDefault(msg, 1, 0),
    totalMoney: jspb.Message.getFieldWithDefault(msg, 2, ""),
    totalRebate: jspb.Message.getFieldWithDefault(msg, 3, 0),
    coverArea: jspb.Message.getFieldWithDefault(msg, 4, 0),
    totalPerson: jspb.Message.getFieldWithDefault(msg, 5, 0),
    totalOrgan: jspb.Message.getFieldWithDefault(msg, 6, 0),
    totalBank: jspb.Message.getFieldWithDefault(msg, 7, 0),
    pageNum: jspb.Message.getFieldWithDefault(msg, 8, 0),
    pageSize: jspb.Message.getFieldWithDefault(msg, 9, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.earth.StatisticsDataRes}
 */
proto.earth.StatisticsDataRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.earth.StatisticsDataRes;
  return proto.earth.StatisticsDataRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.earth.StatisticsDataRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.earth.StatisticsDataRes}
 */
proto.earth.StatisticsDataRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRebateType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTotalMoney(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalRebate(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCoverArea(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTotalPerson(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalOrgan(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalBank(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPageNum(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPageSize(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.earth.StatisticsDataRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.earth.StatisticsDataRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.earth.StatisticsDataRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.earth.StatisticsDataRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRebateType();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getTotalMoney();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTotalRebate();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getCoverArea();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getTotalPerson();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getTotalOrgan();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getTotalBank();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getPageNum();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getPageSize();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
};


/**
 * optional int32 rebate_type = 1;
 * @return {number}
 */
proto.earth.StatisticsDataRes.prototype.getRebateType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.earth.StatisticsDataRes} returns this
 */
proto.earth.StatisticsDataRes.prototype.setRebateType = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string total_money = 2;
 * @return {string}
 */
proto.earth.StatisticsDataRes.prototype.getTotalMoney = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.earth.StatisticsDataRes} returns this
 */
proto.earth.StatisticsDataRes.prototype.setTotalMoney = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 total_rebate = 3;
 * @return {number}
 */
proto.earth.StatisticsDataRes.prototype.getTotalRebate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.earth.StatisticsDataRes} returns this
 */
proto.earth.StatisticsDataRes.prototype.setTotalRebate = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 cover_area = 4;
 * @return {number}
 */
proto.earth.StatisticsDataRes.prototype.getCoverArea = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.earth.StatisticsDataRes} returns this
 */
proto.earth.StatisticsDataRes.prototype.setCoverArea = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int64 total_person = 5;
 * @return {number}
 */
proto.earth.StatisticsDataRes.prototype.getTotalPerson = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.earth.StatisticsDataRes} returns this
 */
proto.earth.StatisticsDataRes.prototype.setTotalPerson = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int32 total_organ = 6;
 * @return {number}
 */
proto.earth.StatisticsDataRes.prototype.getTotalOrgan = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.earth.StatisticsDataRes} returns this
 */
proto.earth.StatisticsDataRes.prototype.setTotalOrgan = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int32 total_bank = 7;
 * @return {number}
 */
proto.earth.StatisticsDataRes.prototype.getTotalBank = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.earth.StatisticsDataRes} returns this
 */
proto.earth.StatisticsDataRes.prototype.setTotalBank = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int32 page_num = 8;
 * @return {number}
 */
proto.earth.StatisticsDataRes.prototype.getPageNum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.earth.StatisticsDataRes} returns this
 */
proto.earth.StatisticsDataRes.prototype.setPageNum = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int32 page_size = 9;
 * @return {number}
 */
proto.earth.StatisticsDataRes.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.earth.StatisticsDataRes} returns this
 */
proto.earth.StatisticsDataRes.prototype.setPageSize = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.earth.BonusRes.prototype.toObject = function(opt_includeInstance) {
  return proto.earth.BonusRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.earth.BonusRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.earth.BonusRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    rebateType: jspb.Message.getFieldWithDefault(msg, 1, ""),
    totalMoney: jspb.Message.getFieldWithDefault(msg, 2, ""),
    totalCount: jspb.Message.getFieldWithDefault(msg, 3, ""),
    areaName: jspb.Message.getFieldWithDefault(msg, 4, ""),
    coverArea: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.earth.BonusRes}
 */
proto.earth.BonusRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.earth.BonusRes;
  return proto.earth.BonusRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.earth.BonusRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.earth.BonusRes}
 */
proto.earth.BonusRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRebateType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTotalMoney(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTotalCount(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setAreaName(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCoverArea(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.earth.BonusRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.earth.BonusRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.earth.BonusRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.earth.BonusRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRebateType();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTotalMoney();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTotalCount();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getAreaName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCoverArea();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string rebate_type = 1;
 * @return {string}
 */
proto.earth.BonusRes.prototype.getRebateType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.earth.BonusRes} returns this
 */
proto.earth.BonusRes.prototype.setRebateType = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string total_money = 2;
 * @return {string}
 */
proto.earth.BonusRes.prototype.getTotalMoney = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.earth.BonusRes} returns this
 */
proto.earth.BonusRes.prototype.setTotalMoney = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string total_count = 3;
 * @return {string}
 */
proto.earth.BonusRes.prototype.getTotalCount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.earth.BonusRes} returns this
 */
proto.earth.BonusRes.prototype.setTotalCount = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string area_name = 4;
 * @return {string}
 */
proto.earth.BonusRes.prototype.getAreaName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.earth.BonusRes} returns this
 */
proto.earth.BonusRes.prototype.setAreaName = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string cover_area = 5;
 * @return {string}
 */
proto.earth.BonusRes.prototype.getCoverArea = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.earth.BonusRes} returns this
 */
proto.earth.BonusRes.prototype.setCoverArea = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.earth.BonusResList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.earth.BonusResList.prototype.toObject = function(opt_includeInstance) {
  return proto.earth.BonusResList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.earth.BonusResList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.earth.BonusResList.toObject = function(includeInstance, msg) {
  var f, obj = {
    bonusResList: jspb.Message.toObjectList(msg.getBonusResList(),
    proto.earth.BonusRes.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.earth.BonusResList}
 */
proto.earth.BonusResList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.earth.BonusResList;
  return proto.earth.BonusResList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.earth.BonusResList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.earth.BonusResList}
 */
proto.earth.BonusResList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.earth.BonusRes;
      reader.readMessage(value,proto.earth.BonusRes.deserializeBinaryFromReader);
      msg.addBonusRes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.earth.BonusResList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.earth.BonusResList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.earth.BonusResList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.earth.BonusResList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBonusResList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.earth.BonusRes.serializeBinaryToWriter
    );
  }
};


/**
 * repeated BonusRes bonus_res = 1;
 * @return {!Array<!proto.earth.BonusRes>}
 */
proto.earth.BonusResList.prototype.getBonusResList = function() {
  return /** @type{!Array<!proto.earth.BonusRes>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.earth.BonusRes, 1));
};


/**
 * @param {!Array<!proto.earth.BonusRes>} value
 * @return {!proto.earth.BonusResList} returns this
*/
proto.earth.BonusResList.prototype.setBonusResList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.earth.BonusRes=} opt_value
 * @param {number=} opt_index
 * @return {!proto.earth.BonusRes}
 */
proto.earth.BonusResList.prototype.addBonusRes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.earth.BonusRes, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.earth.BonusResList} returns this
 */
proto.earth.BonusResList.prototype.clearBonusResList = function() {
  return this.setBonusResList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.earth.BonusResAllList.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.earth.BonusResAllList.prototype.toObject = function(opt_includeInstance) {
  return proto.earth.BonusResAllList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.earth.BonusResAllList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.earth.BonusResAllList.toObject = function(includeInstance, msg) {
  var f, obj = {
    moneyResList: jspb.Message.toObjectList(msg.getMoneyResList(),
    proto.earth.BonusRes.toObject, includeInstance),
    countResList: jspb.Message.toObjectList(msg.getCountResList(),
    proto.earth.BonusRes.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.earth.BonusResAllList}
 */
proto.earth.BonusResAllList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.earth.BonusResAllList;
  return proto.earth.BonusResAllList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.earth.BonusResAllList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.earth.BonusResAllList}
 */
proto.earth.BonusResAllList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.earth.BonusRes;
      reader.readMessage(value,proto.earth.BonusRes.deserializeBinaryFromReader);
      msg.addMoneyRes(value);
      break;
    case 2:
      var value = new proto.earth.BonusRes;
      reader.readMessage(value,proto.earth.BonusRes.deserializeBinaryFromReader);
      msg.addCountRes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.earth.BonusResAllList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.earth.BonusResAllList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.earth.BonusResAllList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.earth.BonusResAllList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMoneyResList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.earth.BonusRes.serializeBinaryToWriter
    );
  }
  f = message.getCountResList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.earth.BonusRes.serializeBinaryToWriter
    );
  }
};


/**
 * repeated BonusRes money_res = 1;
 * @return {!Array<!proto.earth.BonusRes>}
 */
proto.earth.BonusResAllList.prototype.getMoneyResList = function() {
  return /** @type{!Array<!proto.earth.BonusRes>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.earth.BonusRes, 1));
};


/**
 * @param {!Array<!proto.earth.BonusRes>} value
 * @return {!proto.earth.BonusResAllList} returns this
*/
proto.earth.BonusResAllList.prototype.setMoneyResList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.earth.BonusRes=} opt_value
 * @param {number=} opt_index
 * @return {!proto.earth.BonusRes}
 */
proto.earth.BonusResAllList.prototype.addMoneyRes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.earth.BonusRes, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.earth.BonusResAllList} returns this
 */
proto.earth.BonusResAllList.prototype.clearMoneyResList = function() {
  return this.setMoneyResList([]);
};


/**
 * repeated BonusRes count_res = 2;
 * @return {!Array<!proto.earth.BonusRes>}
 */
proto.earth.BonusResAllList.prototype.getCountResList = function() {
  return /** @type{!Array<!proto.earth.BonusRes>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.earth.BonusRes, 2));
};


/**
 * @param {!Array<!proto.earth.BonusRes>} value
 * @return {!proto.earth.BonusResAllList} returns this
*/
proto.earth.BonusResAllList.prototype.setCountResList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.earth.BonusRes=} opt_value
 * @param {number=} opt_index
 * @return {!proto.earth.BonusRes}
 */
proto.earth.BonusResAllList.prototype.addCountRes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.earth.BonusRes, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.earth.BonusResAllList} returns this
 */
proto.earth.BonusResAllList.prototype.clearCountResList = function() {
  return this.setCountResList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.earth.DictRegionReq.prototype.toObject = function(opt_includeInstance) {
  return proto.earth.DictRegionReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.earth.DictRegionReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.earth.DictRegionReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    regionId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    regionName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    parentId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    regionCode: jspb.Message.getFieldWithDefault(msg, 4, ""),
    enable: jspb.Message.getBooleanFieldWithDefault(msg, 8, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.earth.DictRegionReq}
 */
proto.earth.DictRegionReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.earth.DictRegionReq;
  return proto.earth.DictRegionReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.earth.DictRegionReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.earth.DictRegionReq}
 */
proto.earth.DictRegionReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRegionId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRegionName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setParentId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setRegionCode(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnable(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.earth.DictRegionReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.earth.DictRegionReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.earth.DictRegionReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.earth.DictRegionReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRegionId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRegionName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getParentId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getRegionCode();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getEnable();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
};


/**
 * optional string region_id = 1;
 * @return {string}
 */
proto.earth.DictRegionReq.prototype.getRegionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.earth.DictRegionReq} returns this
 */
proto.earth.DictRegionReq.prototype.setRegionId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string region_name = 2;
 * @return {string}
 */
proto.earth.DictRegionReq.prototype.getRegionName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.earth.DictRegionReq} returns this
 */
proto.earth.DictRegionReq.prototype.setRegionName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string parent_id = 3;
 * @return {string}
 */
proto.earth.DictRegionReq.prototype.getParentId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.earth.DictRegionReq} returns this
 */
proto.earth.DictRegionReq.prototype.setParentId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string region_code = 4;
 * @return {string}
 */
proto.earth.DictRegionReq.prototype.getRegionCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.earth.DictRegionReq} returns this
 */
proto.earth.DictRegionReq.prototype.setRegionCode = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional bool enable = 8;
 * @return {boolean}
 */
proto.earth.DictRegionReq.prototype.getEnable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.earth.DictRegionReq} returns this
 */
proto.earth.DictRegionReq.prototype.setEnable = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.earth.DictRegion.prototype.toObject = function(opt_includeInstance) {
  return proto.earth.DictRegion.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.earth.DictRegion} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.earth.DictRegion.toObject = function(includeInstance, msg) {
  var f, obj = {
    regionId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    regionName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    parentId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    regionCode: jspb.Message.getFieldWithDefault(msg, 4, ""),
    regionPinyin: jspb.Message.getFieldWithDefault(msg, 5, ""),
    depth: jspb.Message.getFieldWithDefault(msg, 6, 0),
    listOrder: jspb.Message.getFieldWithDefault(msg, 7, 0),
    enable: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    description: jspb.Message.getFieldWithDefault(msg, 9, ""),
    regionText: jspb.Message.getFieldWithDefault(msg, 10, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.earth.DictRegion}
 */
proto.earth.DictRegion.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.earth.DictRegion;
  return proto.earth.DictRegion.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.earth.DictRegion} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.earth.DictRegion}
 */
proto.earth.DictRegion.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRegionId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRegionName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setParentId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setRegionCode(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setRegionPinyin(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDepth(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setListOrder(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEnable(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setRegionText(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.earth.DictRegion.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.earth.DictRegion.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.earth.DictRegion} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.earth.DictRegion.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRegionId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRegionName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getParentId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getRegionCode();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getRegionPinyin();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getDepth();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getListOrder();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getEnable();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getRegionText();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
};


/**
 * optional string region_id = 1;
 * @return {string}
 */
proto.earth.DictRegion.prototype.getRegionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.earth.DictRegion} returns this
 */
proto.earth.DictRegion.prototype.setRegionId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string region_name = 2;
 * @return {string}
 */
proto.earth.DictRegion.prototype.getRegionName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.earth.DictRegion} returns this
 */
proto.earth.DictRegion.prototype.setRegionName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string parent_id = 3;
 * @return {string}
 */
proto.earth.DictRegion.prototype.getParentId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.earth.DictRegion} returns this
 */
proto.earth.DictRegion.prototype.setParentId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string region_code = 4;
 * @return {string}
 */
proto.earth.DictRegion.prototype.getRegionCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.earth.DictRegion} returns this
 */
proto.earth.DictRegion.prototype.setRegionCode = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string region_pinyin = 5;
 * @return {string}
 */
proto.earth.DictRegion.prototype.getRegionPinyin = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.earth.DictRegion} returns this
 */
proto.earth.DictRegion.prototype.setRegionPinyin = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional int32 depth = 6;
 * @return {number}
 */
proto.earth.DictRegion.prototype.getDepth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.earth.DictRegion} returns this
 */
proto.earth.DictRegion.prototype.setDepth = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int32 list_order = 7;
 * @return {number}
 */
proto.earth.DictRegion.prototype.getListOrder = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.earth.DictRegion} returns this
 */
proto.earth.DictRegion.prototype.setListOrder = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional bool enable = 8;
 * @return {boolean}
 */
proto.earth.DictRegion.prototype.getEnable = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.earth.DictRegion} returns this
 */
proto.earth.DictRegion.prototype.setEnable = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional string description = 9;
 * @return {string}
 */
proto.earth.DictRegion.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.earth.DictRegion} returns this
 */
proto.earth.DictRegion.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string region_text = 10;
 * @return {string}
 */
proto.earth.DictRegion.prototype.getRegionText = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.earth.DictRegion} returns this
 */
proto.earth.DictRegion.prototype.setRegionText = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.earth.DictRegionList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.earth.DictRegionList.prototype.toObject = function(opt_includeInstance) {
  return proto.earth.DictRegionList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.earth.DictRegionList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.earth.DictRegionList.toObject = function(includeInstance, msg) {
  var f, obj = {
    dictRegionList: jspb.Message.toObjectList(msg.getDictRegionList(),
    proto.earth.DictRegion.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.earth.DictRegionList}
 */
proto.earth.DictRegionList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.earth.DictRegionList;
  return proto.earth.DictRegionList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.earth.DictRegionList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.earth.DictRegionList}
 */
proto.earth.DictRegionList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.earth.DictRegion;
      reader.readMessage(value,proto.earth.DictRegion.deserializeBinaryFromReader);
      msg.addDictRegion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.earth.DictRegionList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.earth.DictRegionList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.earth.DictRegionList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.earth.DictRegionList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDictRegionList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.earth.DictRegion.serializeBinaryToWriter
    );
  }
};


/**
 * repeated DictRegion dict_region = 1;
 * @return {!Array<!proto.earth.DictRegion>}
 */
proto.earth.DictRegionList.prototype.getDictRegionList = function() {
  return /** @type{!Array<!proto.earth.DictRegion>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.earth.DictRegion, 1));
};


/**
 * @param {!Array<!proto.earth.DictRegion>} value
 * @return {!proto.earth.DictRegionList} returns this
*/
proto.earth.DictRegionList.prototype.setDictRegionList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.earth.DictRegion=} opt_value
 * @param {number=} opt_index
 * @return {!proto.earth.DictRegion}
 */
proto.earth.DictRegionList.prototype.addDictRegion = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.earth.DictRegion, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.earth.DictRegionList} returns this
 */
proto.earth.DictRegionList.prototype.clearDictRegionList = function() {
  return this.setDictRegionList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.earth.GraphicStatisticsRes.prototype.toObject = function(opt_includeInstance) {
  return proto.earth.GraphicStatisticsRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.earth.GraphicStatisticsRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.earth.GraphicStatisticsRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    value: jspb.Message.getFieldWithDefault(msg, 2, ""),
    totalCount: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.earth.GraphicStatisticsRes}
 */
proto.earth.GraphicStatisticsRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.earth.GraphicStatisticsRes;
  return proto.earth.GraphicStatisticsRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.earth.GraphicStatisticsRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.earth.GraphicStatisticsRes}
 */
proto.earth.GraphicStatisticsRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTotalCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.earth.GraphicStatisticsRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.earth.GraphicStatisticsRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.earth.GraphicStatisticsRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.earth.GraphicStatisticsRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTotalCount();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.earth.GraphicStatisticsRes.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.earth.GraphicStatisticsRes} returns this
 */
proto.earth.GraphicStatisticsRes.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string value = 2;
 * @return {string}
 */
proto.earth.GraphicStatisticsRes.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.earth.GraphicStatisticsRes} returns this
 */
proto.earth.GraphicStatisticsRes.prototype.setValue = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string total_count = 3;
 * @return {string}
 */
proto.earth.GraphicStatisticsRes.prototype.getTotalCount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.earth.GraphicStatisticsRes} returns this
 */
proto.earth.GraphicStatisticsRes.prototype.setTotalCount = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.earth.GraphicStatisticsResList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.earth.GraphicStatisticsResList.prototype.toObject = function(opt_includeInstance) {
  return proto.earth.GraphicStatisticsResList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.earth.GraphicStatisticsResList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.earth.GraphicStatisticsResList.toObject = function(includeInstance, msg) {
  var f, obj = {
    graphicStatisticsList: jspb.Message.toObjectList(msg.getGraphicStatisticsList(),
    proto.earth.GraphicStatisticsRes.toObject, includeInstance),
    statisticsTotal: jspb.Message.getFieldWithDefault(msg, 2, 0),
    statisticsDesc: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.earth.GraphicStatisticsResList}
 */
proto.earth.GraphicStatisticsResList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.earth.GraphicStatisticsResList;
  return proto.earth.GraphicStatisticsResList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.earth.GraphicStatisticsResList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.earth.GraphicStatisticsResList}
 */
proto.earth.GraphicStatisticsResList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.earth.GraphicStatisticsRes;
      reader.readMessage(value,proto.earth.GraphicStatisticsRes.deserializeBinaryFromReader);
      msg.addGraphicStatistics(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStatisticsTotal(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatisticsDesc(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.earth.GraphicStatisticsResList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.earth.GraphicStatisticsResList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.earth.GraphicStatisticsResList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.earth.GraphicStatisticsResList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGraphicStatisticsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.earth.GraphicStatisticsRes.serializeBinaryToWriter
    );
  }
  f = message.getStatisticsTotal();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getStatisticsDesc();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * repeated GraphicStatisticsRes graphic_statistics = 1;
 * @return {!Array<!proto.earth.GraphicStatisticsRes>}
 */
proto.earth.GraphicStatisticsResList.prototype.getGraphicStatisticsList = function() {
  return /** @type{!Array<!proto.earth.GraphicStatisticsRes>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.earth.GraphicStatisticsRes, 1));
};


/**
 * @param {!Array<!proto.earth.GraphicStatisticsRes>} value
 * @return {!proto.earth.GraphicStatisticsResList} returns this
*/
proto.earth.GraphicStatisticsResList.prototype.setGraphicStatisticsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.earth.GraphicStatisticsRes=} opt_value
 * @param {number=} opt_index
 * @return {!proto.earth.GraphicStatisticsRes}
 */
proto.earth.GraphicStatisticsResList.prototype.addGraphicStatistics = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.earth.GraphicStatisticsRes, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.earth.GraphicStatisticsResList} returns this
 */
proto.earth.GraphicStatisticsResList.prototype.clearGraphicStatisticsList = function() {
  return this.setGraphicStatisticsList([]);
};


/**
 * optional int64 statistics_total = 2;
 * @return {number}
 */
proto.earth.GraphicStatisticsResList.prototype.getStatisticsTotal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.earth.GraphicStatisticsResList} returns this
 */
proto.earth.GraphicStatisticsResList.prototype.setStatisticsTotal = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string statistics_desc = 3;
 * @return {string}
 */
proto.earth.GraphicStatisticsResList.prototype.getStatisticsDesc = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.earth.GraphicStatisticsResList} returns this
 */
proto.earth.GraphicStatisticsResList.prototype.setStatisticsDesc = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


goog.object.extend(exports, proto.earth);
